name: 'Terraform infra'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: choice
        required: true
        options:
          - ajay-env
  
jobs:
  terraform:
    name: 'infra'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: 'read'
      id-token: 'write'

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - name: Authenticate to aws
      id: auth
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-south-1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init 
      working-directory: ./modules

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false 
      working-directory: ./modules

      # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./modules
